//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.1.
//


package com.vc.swoop;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Gallery;
import android.widget.ImageView;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.vc.swoop.R.id;
import com.vc.swoop.R.layout;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class AddOrEditAdActivity_
    extends AddOrEditAdActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String AD_JSON_EXTRA = "ad_json";
    public final static String IS_EDIT_EXTRA = "isEdit";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_addad);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        injectExtras_();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static AddOrEditAdActivity_.IntentBuilder_ intent(Context context) {
        return new AddOrEditAdActivity_.IntentBuilder_(context);
    }

    public static AddOrEditAdActivity_.IntentBuilder_ intent(Fragment supportFragment) {
        return new AddOrEditAdActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        btnBaseLeft = ((Button) hasViews.findViewById(id.btnBaseLeft));
        tvBaseRight = ((TextView) hasViews.findViewById(id.tvBaseRight));
        imgBaseLogo = ((ImageView) hasViews.findViewById(id.imgBaseLogo));
        btnBaseRight = ((Button) hasViews.findViewById(id.btnBaseRight));
        tvBaseTitle = ((TextView) hasViews.findViewById(id.tvBaseTitle));
        rl_swap = ((RelativeLayout) hasViews.findViewById(id.rl_swap));
        rl_price = ((RelativeLayout) hasViews.findViewById(id.rl_price));
        tv_price = ((TextView) hasViews.findViewById(id.tv_price));
        et_price = ((EditText) hasViews.findViewById(id.et_price));
        btn_confirm = ((Button) hasViews.findViewById(id.btn_confirm));
        tv_category = ((TextView) hasViews.findViewById(id.tv_category));
        rl_category = ((RelativeLayout) hasViews.findViewById(id.rl_category));
        iv_help = ((ImageView) hasViews.findViewById(id.iv_help));
        btn_cancel = ((Button) hasViews.findViewById(id.btn_cancel));
        btn_addphone = ((Button) hasViews.findViewById(id.btn_addphone));
        ad_content = ((EditText) hasViews.findViewById(id.ad_content));
        et_phone = ((EditText) hasViews.findViewById(id.et_phone));
        pic_gallery = ((Gallery) hasViews.findViewById(id.pic_gallery));
        iv_price = ((ImageView) hasViews.findViewById(id.iv_price));
        rl_offer = ((RelativeLayout) hasViews.findViewById(id.rl_offer));
        iv_following = ((ImageView) hasViews.findViewById(id.iv_following));
        rbgPrice = ((RadioGroup) hasViews.findViewById(id.rbgPrice));
        ad_title = ((EditText) hasViews.findViewById(id.ad_title));
        if (btnBaseRight!= null) {
            btnBaseRight.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    AddOrEditAdActivity_.this.rightClick();
                }

            }
            );
        }
        if (tvBaseRight!= null) {
            tvBaseRight.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    AddOrEditAdActivity_.this.rightTextClick();
                }

            }
            );
        }
        if (btnBaseLeft!= null) {
            btnBaseLeft.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    AddOrEditAdActivity_.this.goBack();
                }

            }
            );
        }
        if (btn_addphone!= null) {
            btn_addphone.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    AddOrEditAdActivity_.this.addphone();
                }

            }
            );
        }
        if (rl_category!= null) {
            rl_category.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    AddOrEditAdActivity_.this.showCategroy();
                }

            }
            );
        }
        if (btn_confirm!= null) {
            btn_confirm.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    AddOrEditAdActivity_.this.selingAd();
                }

            }
            );
        }
        if (btn_cancel!= null) {
            btn_cancel.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    AddOrEditAdActivity_.this.cancel();
                }

            }
            );
        }
        InitBase();
        init();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(AD_JSON_EXTRA)) {
                ad_json = extras_.getString(AD_JSON_EXTRA);
            }
            if (extras_.containsKey(IS_EDIT_EXTRA)) {
                isEdit = extras_.getBoolean(IS_EDIT_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<AddOrEditAdActivity_.IntentBuilder_>
    {

        private Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, AddOrEditAdActivity_.class);
        }

        public IntentBuilder_(Fragment fragment) {
            super(fragment.getActivity(), AddOrEditAdActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                super.startForResult(requestCode);
            }
        }

        public AddOrEditAdActivity_.IntentBuilder_ ad_json(String ad_json) {
            return super.extra(AD_JSON_EXTRA, ad_json);
        }

        public AddOrEditAdActivity_.IntentBuilder_ isEdit(boolean isEdit) {
            return super.extra(IS_EDIT_EXTRA, isEdit);
        }

    }

}
